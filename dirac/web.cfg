Website
{
  LogBackends = stderr
  LogLevel = verb
  #DebugDN = /yourDebugDNhere
  Shortcuts
  {
    lhcb
    {
      My Jobs = /systems/wms/jobs
      Logos = /about/general/logos
    }
    diracAdmin
    {
      Manage Configuration = /systems/configuration/manageRemoteConfig
      World Domination Plan = /info/general/worldDomination
    }
  }
  Schema
  {
    Info
    {
      Overview = info/general/diracOverview, DIRAC Overview, all
      Getting started  = info/External/display?site=http://marwww.in2p3.fr/~atsareg/Docs/DIRAC/build/html/GettingStarted/tree.html, Getting started, all
      DIRAC = info/External/display?site=http://marwww.in2p3.fr/~atsareg/Docs/DIRAC/build/html/diracindex.html, DIRAC, all
      DIRAC API = info/External/display?site=http://www.cern.ch/paterson/DIRAC3API_091208/, API, all
    }
    System
    {
      System Monitoring
      {
        Accounting
        {
          DataStore = systems/activitiesMonitoring/systemPlots?componentName=Accounting/DataStore, Data Store, all
          ReportGenerator = systems/activitiesMonitoring/systemPlots?componentName=Accounting/ReportGenerator, Report Generator, all
        }
        Configuration
        {
          Configuration = systems/activitiesMonitoring/systemPlots?componentName=Configuration/Server, Configuration, all
# Agents
          CE2CSAgent = systems/activitiesMonitoring/systemPlots?componentName=Configuration/CE2CSAgent, CE2CSAgent, all
          UsersAndGroups = systems/activitiesMonitoring/systemPlots?componentName=Configuration/UsersAndGroups, UsersAndGroups, all
        }
        DataManagement
        {
          Services
          {
            DataIntegrity = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/DataIntegrity, DataIntegrity, all
            DataLogging = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/DataLogging, DataLogging, all
            FileCatalog = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/FileCatalog, FileCatalog, all
            LcgFileCatalogProxy = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/LcgFileCatalogProxy, LcgFileCatalogProxy, all
            RunDBInterface = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/RunDBInterface, RunDBInterface, all
            RAWIntegrity = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/RAWIntegrity, RAWIntegrity, all
            StorageElement = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/StorageElement, StorageElement, all
            StorageElementProxy = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/StorageElementProxy, StorageElementProxy, all
            StorageUsage = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/StorageUsage, StorageUsage, all
            TransferDBMonitoring = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/TransferDBMonitoring, TransferDBMonitoring, all
          }
          Agents{
            FTSMonitorAgent = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/FTSMonitorAgent, FTSMonitorAgent, all
            FTSSubmitAgent = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/FTSSubmitAgent, FTSSubmitAgent, all
            NamespaceBrowser = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/NamespaceBrowser, NamespaceBrowser, all
            RAWIntegrityAgent = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/RAWIntegrityAgent, RAWIntegrityAgent, all
            RegistrationAgent = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/RegistrationAgent, RegistrationAgent, all
            RemovalAgent = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/RemovalAgent, RemovalAgent, all
            ReplicationScheduler = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/ReplicationScheduler, ReplicationScheduler, all
            StorageHistoryAgent = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/StorageHistoryAgent, StorageHistoryAgent, all
            StorageSummaryAgent = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/StorageSummaryAgent, StorageSummaryAgent, all
            StorageUsageAgent = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/StorageUsageAgent, StorageUsageAgent, all
            TargzJobLogAgent = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/TargzJobLogAgent, TargzJobLogAgent, all
            TransferAgent = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/TransferAgent, TransferAgent, all
            UserStorageUsageAgent = systems/activitiesMonitoring/systemPlots?componentName=DataManagement/UserStorageUsageAgent, UserStorageUsageAgent, all
          }
        }
        Framework{
          BundleDelivery = systems/activitiesMonitoring/systemPlots?componentName=Framework/BundleDelivery, BundleDelivery, all
          Gateway = systems/activitiesMonitoring/systemPlots?componentName=Framework/Gateway, Gateway, all
          ProxyManager = systems/activitiesMonitoring/systemPlots?componentName=Framework/ProxyManager, ProxyManager, all
          Monitoring = systems/activitiesMonitoring/systemPlots?componentName=Framework/Monitoring, Monitoring, all
          Notification = systems/activitiesMonitoring/systemPlots?componentName=Framework/Notification, Notification, all
          Plotting = systems/activitiesMonitoring/systemPlots?componentName=Framework/Plotting, Plotting, all
          SecurityLogging = systems/activitiesMonitoring/systemPlots?componentName=Framework/SecurityLogging, SecurityLogging, all
          SiteMap = systems/activitiesMonitoring/systemPlots?componentName=Framework/SiteMap, SiteMap, all
          SystemAdministrator = systems/activitiesMonitoring/systemPlots?componentName=Framework/SystemAdministrator, SystemAdministrator, all
          SystemLogging = systems/activitiesMonitoring/systemPlots?componentName=Framework/SystemLogging, SystemLogging, all
          SystemLoggingReport = systems/activitiesMonitoring/systemPlots?componentName=Framework/SystemLoggingReport, SystemLoggingReport, all
          UserprofileManager = systems/activitiesMonitoring/systemPlots?componentName=Framework/UserProfileManager, UserProfileManager, all
# Agents
          CAUpdateAgent = systems/activitiesMonitoring/systemPlots?componentName=Framework/CAUpdateAgent, CAUpdateAgent, all
          LemonAgent = systems/activitiesMonitoring/systemPlots?componentName=Framework/LemonAgent, LemonAgent, all
          MyProxyRenewalAgent = systems/activitiesMonitoring/systemPlots?componentName=Framework/MyProxyRenewalAgent, MyProxyRenewalAgent, all
          TopErrorMessagesReporter = systems/activitiesMonitoring/systemPlots?componentName=Framework/TopErrorMessagesReporter, TopErrorMessagesReporter, all
          SystemLoggingDBCleaner = systems/activitiesMonitoring/systemPlots?componentName=Framework/SystemLoggingDBCleaner, SystemLoggingDBCleaner, all
          ErrorMessageMonitor = systems/activitiesMonitoring/systemPlots?componentName=Framework/ErrorMessageMonitor, ErrorMessageMonitor, all
        }
        ProductionManagement{
          ProductionManager = systems/activitiesMonitoring/systemPlots?componentName=ProductionManagement/ProductionManager, ProductionManager, all
          Production Request = systems/activitiesMonitoring/systemPlots?componentName=ProductionManagement/ProductionRequest, ProductionRequest, all
        }
        RequestManagement{
          RequestManager = systems/activitiesMonitoring/systemPlots?componentName=RequestManagement/RequestManager, RequestManager, all
        }
        ResourceStatus{
          ResourceStatus = systems/activitiesMonitoring/systemPlots?componentName=ResourceStatus/ResourceStatus, ResourceStatus, all
        }
        StorageManagement{
          StorageManager = systems/activitiesMonitoring/systemPlots?componentName=StorageManagement/StorageManagerHandler, StorageManager, all
        }
        Transformation{
          TransformationManager = systems/activitiesMonitoring/systemPlots?componentName=Transformation/TransformationManager, TransformationManager, all
        }
        WorkloadManagement
        {
          JobManager = systems/activitiesMonitoring/systemPlots?componentName=WorkloadManagement/JobManager, JobManager plots, all
          JobMonitoring = systems/activitiesMonitoring/systemPlots?componentName=WorkloadManagement/JobMonitoring, JobMonitoring plots, all
          JobStateUpdate = systems/activitiesMonitoring/systemPlots?componentName=WorkloadManagement/JobStateUpdate, JobStateUpdate plots, all
          Matcher = systems/activitiesMonitoring/systemPlots?componentName=WorkloadManagement/Matcher, Matcher, all
          SandboxStore = systems/activitiesMonitoring/systemPlots?componentName=WorkloadManagement/SandboxStore, SandboxStore, all
          WMSAdministrator = systems/activitiesMonitoring/systemPlots?componentName=WorkloadManagement/WMSAdministrator, WMSAdministrator, all
        }
        Manage views
        {
          Create views = systems/activitiesMonitoring/createViews, Create monitoring views, ServiceAdministrator
          Manage views = systems/activitiesMonitoring/manageViews, Manage Monitoring views, ServiceAdministrator
          Plot views = systems/activitiesMonitoring/plotStaticViews,Plot views,all
        }
        Manage activities = systems/activitiesMonitoring/manageActivities, Manage Monitoring activities, ServiceAdministrator
      }
      Configuration
      {
#        Manage user configuration = systems/configuration/manageUserConfig, Manage user configuration,all
#        Upload user configuration file = systems/configuration/uploadUserConfig, Upload configuration,all
        Show history of server changes = systems/configuration/showHistory, History of changes, CSAdministrator
        Manage remote configuration = systems/configuration/manageRemoteConfig, Manage remote configuration, CSAdministrator
        Browse remote configuration = systems/configuration/browseRemoteConfig, Browse remote configuration, authenticated
        Plots for Configuration Server = systems/activitiesMonitoring/systemPlots?componentName=Configuration/Server, Configuration/Server plots, all
      }
      Accounting
      {
        Plots
        {
          Data Operation plots = systems/accountingPlots/dataOperation,Data Operation plots, all
          Job plots = systems/accountingPlots/job,Job plots, all
          WMS history plots = systems/accountingPlots/WMSHistory, WMS history plots, all
          Pilot plots = systems/accountingPlots/pilot, Pilot plots, all
          SRM space token deployment plots = systems/accountingPlots/SRMSpaceTokenDeployment, SRM space token deployment plots, all
        }
#        Plots for DataStore Server = systems/activitiesMonitoring/systemPlots?componentName=Accounting/DataStore, Accounting/DataStore plots, all
#        Plots for ReportGenerator Server = systems/activitiesMonitoring/systemPlots?componentName=Accounting/ReportGenerator, Accounting/ReportGenerator plots, all
        Data Operations = systems/accountingPlots/dataOperation,Data Operations, all
        Proxy action logs = systems/framework/showProxyActionLogs, Proxy actions log, ProxyManagement
      }
      Registry
      {
        Manage proxies = systems/framework/manageProxies, Proxy management, all
      }
      Error console = systems/ErrorConsole/display, Error console, all
    }
    jobs
    {
      Job monitor = jobs/JobMonitor/display, Jobs monitoring, all
      Production monitor = jobs/ProductionMonitor/display, Production monitoring, all
      Site summary = jobs/SiteSummary/display, Site summary, all
      Pilot monitor = jobs/PilotMonitor/display, Pilot monitor, all
      Pilot summary = jobs/PilotSummary/display, Pilot summary, all
      Request monitor = jobs/RequestMonitor/display, Request monitoring, all
    }
    Views
    {
      Presenter = jobs/Presenter/display, Presenter, all
    }
  }
}

