Website
{
  LogBackends = stderr
  LogLevel = verb
  #DebugDN = /yourDebugDNhere
  Shortcuts
  {
    lhcb
    {
      My Jobs = /systems/wms/jobs
      Logos = /about/general/logos
    }
    diracAdmin
    {
      Manage Configuration = /systems/configuration/manageRemoteConfig
      World Domination Plan = /info/general/worldDomination
    }
  }
  Schema
  {
    info
    {
      Documentation
      {
        Overview = info/general/diracOverview, DIRAC Overview, all
        DIRAC API = info/External/display?site=http://www.cern.ch/paterson/DIRAC3API_091208/, API, all
      }
      Download = info/general/download,Download DIRAC,all
      Logos = info/general/logos,Logos,all
    }
    systems
    {
      Workload Management
      {
        Component plots
        {
          Job Manager = systems/activitiesMonitoring/systemPlots?componentName=WorkloadManagement/JobManager, WorkloadManagement/JobManager plots, all
          Job Monitoring = systems/activitiesMonitoring/systemPlots?componentName=WorkloadManagement/JobMonitoring, WorkloadManagement/JobMonitoring plots, all
          Job State Update = systems/activitiesMonitoring/systemPlots?componentName=WorkloadManagement/JobStateUpdate, WorkloadManagement/JobStateUpdate plots, all
          Input sandbox = systems/activitiesMonitoring/systemPlots?componentName=WorkloadManagement/InputSandbox, WorkloadManagement/InputSandbox plots, all
          Output sandbox = systems/activitiesMonitoring/systemPlots?componentName=WorkloadManagement/OutputSandbox, WorkloadManagement/OutputSandbox plots, all
        }
      }
      Monitoring
      {
        Create views = systems/activitiesMonitoring/createViews, Create monitoring views, ServiceAdministrator
        Manage views = systems/activitiesMonitoring/manageViews, Manage Monitoring views, ServiceAdministrator
        Manage activities = systems/activitiesMonitoring/manageActivities, Manage Monitoring activities, ServiceAdministrator
        Plot views = systems/activitiesMonitoring/plotStaticViews,Plot views,all
        Plots for Monitoring Server = systems/activitiesMonitoring/systemPlots?componentName=Monitoring/Server, Monitoring/Server plots, all
      }
      Configuration
      {
        Manage user configuration = systems/configuration/manageUserConfig, Manage user configuration,all
        Upload user configuration file = systems/configuration/uploadUserConfig, Upload configuration,all
        Show history of server changes = systems/configuration/showHistory, History of changes, CSAdministrator
        Manage remote configuration = systems/configuration/manageRemoteConfig, Manage remote configuration, CSAdministrator
        Browse remote configuration = systems/configuration/browseRemoteConfig, Browse remote configuration, authenticated
        Plots for Configuration Server = systems/activitiesMonitoring/systemPlots?componentName=Configuration/Server, Configuration/Server plots, all
      }
      Accounting
      {
        Plots
        {
          Data Operation plots = systems/accountingPlots/dataOperation,Data Operation plots, all
          Job plots = systems/accountingPlots/job,Job plots, all
          WMS history plots = systems/accountingPlots/WMSHistory, WMS history plots, all
          Pilot plots = systems/accountingPlots/pilot, Pilot plots, all
          SRM space token deployment plots = systems/accountingPlots/SRMSpaceTokenDeployment, SRM space token deployment plots, all
        }
        Plots for ReportGenerator Server = systems/activitiesMonitoring/systemPlots?componentName=Accounting/ReportGenerator, Accounting/ReportGenerator plots, all
      }
      Logging
      {
        Plots for System Logging = systems/activitiesMonitoring/systemPlots?componentName=Logging/SystemLogging, Logging/SystemLogging plots, all
      }
      Framework
      {
        Manage proxies = systems/framework/manageProxies, Proxy management, all
        Proxy action logs = systems/framework/showProxyActionLogs, Proxy actions log, ProxyManagement
        Plots for Proxy manager = systems/activitiesMonitoring/systemPlots?componentName=Framework/ProxyManager, Framework/ProxyManager plots, all
      }
      Error console = systems/ErrorConsole/display, Error console, all
    }
    jobs
    {
      Job monitor = jobs/JobMonitor/display, Jobs monitoring, all
      Production monitor = jobs/ProductionMonitor/display, Production monitoring, all
      Site summary = jobs/SiteSummary/display, Site summary, all
      Pilot monitor = jobs/PilotMonitor/display, Pilot monitor, all
      Pilot summary = jobs/PilotSummary/display, Pilot summary, all
      Request monitor = jobs/RequestMonitor/display, Request monitoring, all
    }
  }
}
